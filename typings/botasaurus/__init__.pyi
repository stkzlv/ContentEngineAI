from collections.abc import Callable
from typing import Any, Optional, Union

bt: Any

class Driver:
    def get(self, url: str) -> None: ...
    def find_element(self, selector: str) -> Any: ...
    def find_elements(self, selector: str) -> list[Any]: ...
    def wait_for_element(self, selector: str, timeout: float | None = None) -> Any: ...
    def close(self) -> None: ...
    def quit(self) -> None: ...

class Task:
    def __init__(self, data: Any = None): ...

def browser(
    *, run_task: Callable | None = None, data: Any | None = None, **kwargs: Any
) -> Any: ...
def request(
    url: str,
    *,
    method: str = "GET",
    headers: dict[str, str] | None = None,
    **kwargs: Any,
) -> Any: ...
def LocalStorage(driver: Driver) -> Any: ...
