# .pre-commit-config.yaml
# Install pre-commit hooks: poetry run pre-commit install

repos:
  # Ruff: Linter and Formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.5.0  # Matches pyproject.toml (ruff = "^0.5.0")
    hooks:
      - id: ruff
        args: [--fix]  # Automatically fix linting issues
      - id: ruff-format  # Formats code, replacing Black

  # Mypy: Type Checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.1  # Matches pyproject.toml (mypy = "^1.10.1")
    hooks:
      - id: mypy
        args: [src/]  # Run mypy on src/ directory
        additional_dependencies: ["types-PyYAML==6.0.12"]  # For PyYAML type stubs

  # Pre-commit Hooks: YAML validation and file cleanup
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0  # Recent stable version
    hooks:
      - id: check-yaml  # Validates YAML files (e.g., .pre-commit-config.yaml)
      - id: end-of-file-fixer  # Ensures files end with a newline
      - id: trailing-whitespace  # Removes trailing whitespace
      - id: check-added-large-files  # Prevents large files from being committed
      - id: check-merge-conflict  # Detects merge conflict markers
      - id: check-case-conflict  # Detects files that would conflict on case-insensitive filesystems

  # Bandit: Security scanner
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8  # Matches pyproject.toml
    hooks:
      - id: bandit
        args: ["-r", "src/", "-f", "json", "-o", "bandit-report.json"]
        exclude: "tests/|venv/|.venv/"

  # Safety: Dependency vulnerability checker
  - repo: https://github.com/PyCQA/safety
    rev: v2.3.5  # Matches pyproject.toml
    hooks:
      - id: safety
        args: ["--json", "--output", "safety-report.json"]
